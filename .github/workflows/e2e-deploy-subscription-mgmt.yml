---
name: "e2e-deploy"

on:
  push:
    branches:
      - main
    paths:
      - 'referenceImplementations/core/subscriptionTemplates/**'
  workflow_dispatch:

permissions:
    id-token: write
    contents: write
    pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_ENVIRONMENT: ${{ secrets.ARM_ENVIRONMENT }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  modulesFolder: "~/.local/share/powershell/Modules"

jobs:

  alpha:

    name: "alpha"
    runs-on: ubuntu-latest
    environment: alpha

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "azure login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true 

      - name: 'modules'
        shell: pwsh
        run: |
          Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force

      - name: alpha-context-set
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-AzContext -SubscriptionId bbe4a470-835d-4188-a6a6-ce0c1810ddf4
          azPSVersion: "latest"

      - name: 'alpha-deploy-template'
        shell: pwsh
        run: |
          $enviornment = "alpha"
          Get-ChildItem -Recurse -Path ./referenceImplementations/core/subscriptionTemplates -Filter *.json -Exclude *.gold.json, *.alpha.json  | % {
              $parameterFile = (Join-Path $_.Directory.FullName -ChildPath ($_.BaseName + ".parameters." + $enviornment + $_.Extension))
              $parameters = @{
                  'Name'                        = 'azops'
                  'Location'                    = 'eastus'
                  'TemplateFile'                = $_.FullName
                  'TemplateParameterFile'       = ((Test-Path $parameterFile) ? $parameterFile : "./emptyParameters.json")
                  'SkipTemplateParameterPrompt' = $true
              }
              $deploymentCommand = 'New-AzSubscriptionDeployment'
              New-AzSubscriptionDeployment @parameters -WhatIf
          }
 ########################################################################
 #                       G  O   L   D                                   #
 ########################################################################


  gold:
    needs: alpha

    name: "gold"
    runs-on: ubuntu-latest
    environment: gold

    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "azure login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true 

      - name: 'modules'
        shell: pwsh
        run: |
          Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force

      - name: gold-context-set
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Set-AzContext -SubscriptionId f9ba0167-1fc6-425a-b052-0fbc9937a80f
          azPSVersion: "latest"

      - name: 'alpha-deploy-template'
        shell: pwsh
        run: |
          $enviornment = "gold"
          Get-ChildItem -Recurse -Path ./referenceImplementations/core/subscriptionTemplates -Filter *.json -Exclude *.gold.json, *.alpha.json  | % {
              $parameterFile = (Join-Path $_.Directory.FullName -ChildPath ($_.BaseName + ".parameters." + $enviornment + $_.Extension))
              $parameters = @{
                  'Name'                        = 'azops'
                  'Location'                    = 'eastus'
                  'TemplateFile'                = $_.FullName
                  'TemplateParameterFile'       = ((Test-Path $parameterFile) ? $parameterFile : "./emptyParameters.json")
                  'SkipTemplateParameterPrompt' = $true
              }
              $deploymentCommand = 'New-AzSubscriptionDeployment'
              New-AzSubscriptionDeployment @parameters -WhatIf
          }